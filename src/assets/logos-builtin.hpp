#ifndef FETCHPP_LOGOS_BUILTIN_HPP
#define FETCHPP_LOGOS_BUILTIN_HPP

#include <string>
#include <unordered_map>

inline const std::unordered_map<std::string, const char*> LogosStr = {
    { "void",
        R"""(
 __      __   _     _ 
 \ \    / /  (_)   | |
  \ \  / /__  _  __| |
   \ \/ / _ \| |/ _` |
    \  / (_) | | (_| |
     \/ \___/|_|\__,_|

        )"""
    },
    { "arch",
        R"""(
                    _     
     /\            | |    
    /  \   _ __ ___| |__  
   / /\ \ | '__/ __| '_ \ 
  / ____ \| | | (__| | | |
 /_/    \_\_|  \___|_| |_|      

        )"""
    },
    { "nixos",
        R"""(
  _   _ _         ____   _____ 
 | \ | (_)       / __ \ / ____|
 |  \| |___  __ | |  | | (___  
 | . ` | \ \/ / | |  | |\___ \ 
 | |\  | |>  <  | |__| |____) |
 |_| \_|_/_/\_\  \____/|_____/ 

        )"""
    },
    { "gentoo",
        R"""(
   _____            _              
  / ____|          | |             
 | |  __  ___ _ __ | |_ ___   ___  
 | | |_ |/ _ \ '_ \| __/ _ \ / _ \ 
 | |__| |  __/ | | | || (_) | (_) |
  \_____|\___|_| |_|\__\___/ \___/ 

        )"""
    },
    { "solus",
        R"""(
   _____       _           
  / ____|     | |          
 | (___   ___ | |_   _ ___ 
  \___ \ / _ \| | | | / __|
  ____) | (_) | | |_| \__ \
 |_____/ \___/|_|\__,_|___/

        )"""
    },
    { "lfs",
        R"""(
  _      ______ _____ 
 | |    |  ____/ ____|
 | |    | |__ | (___  
 | |    |  __| \___ \ 
 | |____| |    ____) |
 |______|_|   |_____/ 

        )"""
    },
    { "debian",
        R"""(
  _____       _     _             
 |  __ \     | |   (_)            
 | |  | | ___| |__  _  __ _ _ __  
 | |  | |/ _ \ '_ \| |/ _` | '_ \ 
 | |__| |  __/ |_) | | (_| | | | |
 |_____/ \___|_.__/|_|\__,_|_| |_|

        )"""
    },
    { "fedora",
        R"""(
  ______       _                 
 |  ____|     | |                
 | |__ ___  __| | ___  _ __ __ _ 
 |  __/ _ \/ _` |/ _ \| '__/ _` |
 | | |  __/ (_| | (_) | | | (_| |
 |_|  \___|\__,_|\___/|_|  \__,_|

        )"""
    },
};

#endif
